---

# Bootstrap

- hosts: all
  gather_facts: False
  become: true
  pre_tasks:
    - name: install python 2 for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      register: output
      changed_when:
      - output.stdout != ""
      - output.stdout != "\r\n"
    - name: Check if inside AWS.
      uri:
        url: http://169.254.169.254/latest/meta-data
        timeout: 2
      register: aws_uri_check
      failed_when: False
    - set_fact:
        is_aws_environment: "{{ aws_uri_check.status == 200 }}"
  roles:
    - role: aws
      when: is_aws_environment

# Setup VPN

- hosts: vpn
  become: true
  roles:
    - role: openvpn
      when: openvpn_enabled
      tags: vpn

# Setup Docker

- hosts: all
  become: true
  vars:
    pip_install_packages:
      - name: docker
      - name: docker-compose
        version: "1.22.0"
  roles:
    - geerlingguy.pip
    - geerlingguy.docker
    - docker-options

- hosts: all
  become: true
  roles:
    - role: ecr-login
      when: aws_ecr_login
      tags: always
    - axe-cli

# Setup wallets, miners and full nodes

- hosts: wallet-nodes
  become: true
  roles:
    - role: axed
      axed_indexes: true
      axed_zmq: true
      tags:
      - axed

- hosts: miners
  become: true
  roles:
    - role: axed
      tags:
        - axed

- hosts: full-nodes
  become: true
  roles:
    - role: axed
      axed_listen: true
      tags:
      - axed

# Setup masternodes

- hosts: masternodes
  become: true
  pre_tasks:
  - set_fact:
      masternode: '{{ masternodes[inventory_hostname] }}'
    tags: always
    when: inventory_hostname in masternodes
  - fail:
      msg: Masternode not defined in network config
    when: masternode is not defined
  roles:
  - role: axed
    axed_listen: true
    axed_zmq: true
    axed_indexes: true
    tags:
    - axed
  - mn-sentinel
  - mn-insight
  - role: mn-evo-services
    tags:
    - evo
    when: evo_services

# Generate first block on seed node
# so that all nodes leave IBD mode (required for mining)

- hosts: seed-node
  become: true
  roles:
    - role: generate-firstblock
      when: axe_network == "devnet" or axe_network == "regtest"

- hosts: miners
  become: true
  roles:
    - role: axed-generate-miner
      when: axe_network != "mainnet"

- hosts: web
  become: true
  roles:
    - multifaucet
  tags:
    - web

# Start masternodes

- hosts: masternode-wallet
  become: true
  roles:
    - mn-fund-collateral
    - mn-pay-faucet
    - {role: mn-conf, tags: mn-conf}
    - mn-start

- hosts: all
  become: true
  tasks:
    - name: prune unused docker images
      shell: docker image prune -f
      tags: always
